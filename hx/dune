(library
 (name hx)
 (public_name hx)
 (modules hx hx_static)
 (libraries hx_runtime react.server react_dream dune-site containers)
 (preprocess
  (pps react.ppx -native)))

(executable
 (name hx_example)
 (public_name hx)
 (modules hx_example)
 (libraries hx dream containers)
 (preprocess
  (pps react.ppx -native)))

(generate_sites_module
 (module hx_static)
 (sites hx))

(library
 (name hx_runtime_browser)
 (modules hx_runtime hx_targets hx_dom)
 (enabled_if
  (<> %{profile} "release"))
 (wrapped false)
 (libraries
  melange.dom
  react.browser
  remote.browser
  realm.browser
  melange-webapi)
 (flags :standard -open Realm -open React_browser)
 (modes melange)
 (preprocess
  (pps melange.ppx react.ppx ppx_deriving_json.browser)))

(subdir
 native
 (library
  (name hx_runtime)
  (public_name hx.runtime)
  (wrapped false)
  (modes native)
  (libraries react.browser_server remote.native realm.native)
  (flags :standard -open Realm)
  (preprocess
   (pps react.ppx -native ppx_deriving_json.native)))
 (copy_files#
  (files ../hx_runtime.mlx)))

(melange.emit
 (alias browser_js)
 (target output)
 (enabled_if
  (<> %{profile} "release"))
 (modules)
 (libraries hx_runtime_browser)
 (module_systems commonjs))

(rule
 (target ./__boot.js)
 (deps ./output/hx/hx_runtime.js)
 (enabled_if
  (<> %{profile} "release"))
 (action
  (with-stdout-to
   %{target}
   (progn
    (run echo "import './output/hx/hx_runtime.js';")
    (run echo "import '%{lib:react.browser:react_browser_runtime.js}';")))))

(rule
 (target ./hx_runtime.js)
 (mode promote)
 (enabled_if
  (<> %{profile} "release"))
 (deps
  %{lib:react.browser:react_browser_runtime.js}
  (alias browser_js))
 (action
  (run
   esbuild
   --log-level=warning
   --bundle
   --loader:.js=jsx
   --minify
   --outfile=%{target}
   ./__boot.js)))

(install
 (package hx)
 (section
  (site
   (hx static)))
 (files hx_runtime.js))
